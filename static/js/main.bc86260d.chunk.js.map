{"version":3,"sources":["Components/Task.js","Components/Input.js","App.js","index.js"],"names":["Task","task","props","className","done","classNameBtn","contentEditable","id","title","onClick","doneTask","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","deleteTask","Input","addInputBtn","currentState","state","btnCloseBtn","setState","stateForAddInput","btnAddIpnut","btnAddInput","addTask","input","inputChange","e","target","value","handleEnter","key","this","type","placeholder","onChange","onKeyPress","enableBackground","React","Component","App","componentDidMount","LocalTask","JSON","parse","localStorage","getItem","tasks","index","map","indexOf","a","stringify","setItem","idx","findIndex","el","newArray","slice","local","push","length","activeTasks","filter","doneTasks","ReactDOM","render","document","getElementById"],"mappings":"2RAyBeA,EAvBF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAASC,EAAW,wBAEzBC,EAAY,SAAWF,EAAKG,KAAO,YAAc,IACjDC,EAAe,SAAWJ,EAAKG,KAAO,WAAa,IAIzD,OACI,yBAAKD,UAAU,QACX,yBAAMA,UAAS,sBAAiBA,GAAaG,gBAAgB,QAA7D,IAAqE,0BAAMH,UAAU,UAAUG,gBAAgB,SAASL,EAAKM,GAAI,EAA5D,OAAyEN,EAAKO,OAEnJ,4BAAQL,UAAS,+BAA0BE,GAAiBI,QAASP,EAAMQ,UAC3E,yBAAKP,UAAU,iBAAgBQ,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWC,KAAK,OAAOC,MAAM,8BACzF,0BAAMC,EAAE,mDAAmDC,OAAO,QAAQC,YAAY,MAAMC,cAAc,QAAQC,eAAe,YAGlI,4BAAQjB,UAAU,WAAYM,QAASP,EAAMmB,YACxC,yBAAKT,OAAO,OAAOC,QAAQ,gBAAgBF,MAAM,OAAOI,MAAM,8BAA6B,0BAAMC,EAAE,0CAA0CF,KAAK,YAAW,0BAAME,EAAE,iGAAiGF,KAAK,YAAW,0BAAME,EAAE,2FAA2FF,KAAK,YAAW,0BAAME,EAAE,oaAAoaF,KAAK,aCsC5zBQ,E,YAtDX,WAAYpB,GAAQ,IAAD,8BACf,4CAAMA,KAOVqB,YAAc,WACV,IAAMC,EAAe,EAAKC,MAAMC,YAChC,EAAKC,SAAS,CAACD,aAAcF,IAC7B,IAAMI,EAAmB,EAAKH,MAAMI,YACpC,EAAKF,SAAS,CAACG,YAAaF,KAZb,EAcnBG,QAAU,WAAM,IACLC,EAAS,EAAKP,MAAdO,MACHA,IACA,EAAK9B,MAAM6B,QAAQC,GACnB,EAAKL,SAAS,CAACK,MAAO,OAlBX,EAqBnBC,YAAc,SAACC,GACX,EAAKP,SAAS,CAAEK,MAAOE,EAAEC,OAAOC,SAtBjB,EAwBnBC,YAAc,SAACH,GACC,UAATA,EAAEI,KAAgB,EAAKP,WAvB1B,EAAKN,MAAQ,CACTO,MAAO,GACPF,aAAa,EACbJ,aAAa,GALF,E,sEA2BT,IACCM,EAASO,KAAKd,MAAdO,MACP,OACI,yBAAK7B,UAAU,gBACZ,4BAAQA,UAAS,wBAAmBoC,KAAKd,MAAMC,YAAc,oBAAsB,MAClFjB,QAAS8B,KAAKhB,aACV,0BAAMpB,UAAU,aACZ,yBAAKS,OAAO,OAAOC,QAAQ,cAAcF,MAAM,OAAOI,MAAM,8BAA6B,0BAAMC,EAAE,4WAH1G,yFAOC,yBAAKb,UAAWoC,KAAKd,MAAMK,YAAc,mBAAqB,MAC1D,2BAAOU,KAAK,OACZrC,UAAU,QACVsC,YAAY,kFACZC,SAAUH,KAAKN,YACfG,MAAOJ,EACPW,WAAYJ,KAAKF,cAEjB,4BAAQ5B,QAAS8B,KAAKR,QAAS5B,UAAU,OACzC,yBAAKI,GAAG,SAASqC,iBAAiB,wBAAwBhC,OAAO,KAAKC,QAAQ,oBAAoBF,MAAM,KAAKI,MAAM,8BAA6B,0BAAMC,EAAE,0SAAyS,0BAAMA,EAAE,gH,GAhDzc6B,IAAMC,WC8FXC,E,YA1Fb,aAAe,IAAD,8BACZ,+CAMFC,kBAAmB,WACjB,IAAIC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,cAC5CJ,GACF,EAAKtB,SAAS,CAAC2B,MAAQL,KAVb,EAcbvC,SAAW,SAACH,EAAG+C,GACd,IAAMC,EAAQ,EAAK9B,MAAM6B,MAAME,KAAI,SAAAvD,GAAI,OAAIA,EAAKM,MAAIkD,QAAQlD,GAC5D,EAAKoB,UAAS,YAAa,IAAX2B,EAAU,EAAVA,MACXA,EAAMC,GAAOnD,KAChBkD,EAAMC,GAAOnD,MAAO,EAEpBkD,EAAMC,GAAOnD,MAAO,EAEpB,IAAIsD,EAAIR,KAAKS,UAAUL,GAEvB,OADAF,aAAaQ,QAAQ,YAAaF,GAC3BJ,MAxBG,EA4BdjC,WAAa,SAACd,GACZ,EAAKoB,UAAS,YAAgB,IAAb2B,EAAY,EAAZA,MACTO,EAAMP,EAAMQ,WAAU,SAACC,GAAD,OAAQA,EAAGxD,KAAOA,KAExCyD,EAAQ,sBACTV,EAAMW,MAAM,EAAGJ,IADN,YAETP,EAAMW,MAAMJ,EAAM,KAGnBK,EAAQhB,KAAKS,UAAUK,GAG3B,OAFAZ,aAAaQ,QAAQ,YAAaM,GAE3B,CACLZ,MAAOU,OAzCC,EA8ChBjC,QAAU,SAAC9B,EAAMM,GACb,EAAKoB,UAAS,YAAc,IAAZ2B,EAAW,EAAXA,MACdA,EAAMa,KAAM,CACV5D,GAAI+C,EAAMc,OACV5D,MAAOP,EACPG,MAAM,IAGR,IAAIsD,EAAIR,KAAKS,UAAUL,GAEvB,OADAF,aAAaQ,QAAQ,YAAaF,GAC3BJ,MAtDT,EAAK7B,MAAQ,CACX6B,MAAO,IAHG,E,sEA4DJ,IAAD,OACAA,EAASf,KAAKd,MAAd6B,MACDe,EAAcf,EAAMgB,QAAO,SAAArE,GAAI,OAAKA,EAAKG,QAC3CmE,EAAYjB,EAAMgB,QAAO,SAAArE,GAAI,OAAIA,EAAKG,QAE1C,OACE,yBAAKD,UAAU,OACb,yBAAKA,UAAU,aAEb,wBAAIA,UAAU,eAAd,0FACA,4HAAuBoE,EAAUH,SAC/Bd,EAAMc,QAAU,wBAAIjE,UAAU,uBAAd,2GACjB,sBAAIkE,GAAJ,YAAmBE,IAAWf,KAAI,SAAAvD,GAAI,OACrC,kBAAC,EAAD,CAAME,UAAU,OAChBF,KAAMA,EACNqC,IAAKrC,EAAKM,GACVc,WAAY,kBAAM,EAAKA,WAAWpB,EAAKM,KACvCG,SAAU,kBAAM,EAAKA,SAAST,EAAKM,UAGrC,kBAAC,EAAD,CACAgB,YAAagB,KAAKhB,YAClBQ,QAASQ,KAAKR,gB,GAnFNc,IAAMC,WCAxB0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bc86260d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Task = ({task, ...props}) => {\r\n\r\n    const className = 'task ' + (task.done ? 'task-done' : '');\r\n    const classNameBtn = 'task ' + (task.done ? 'btn-done' : '')\r\n\r\n\r\n \r\n    return(\r\n        <div className=\"task\">\r\n            <div  className={`task__intro ${className}`} contentEditable=\"true\"> <span className=\"task-id\" contentEditable=\"false\">{task.id +1}.  </span>{task.title}</div>\r\n            \r\n            <button className={`btn__del btn-checked ${classNameBtn}`}  onClick={props.doneTask}>\r\n            <svg className=\"task__done-svg\"width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n             <path d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\" stroke=\"white\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n            </svg>\r\n            </button>\r\n            <button className=\"btn__del\"  onClick={props.deleteTask}  >\r\n                 <svg height=\"12pt\" viewBox=\"-64 0 512 512\" width=\"12pt\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m256 80h-32v-48h-64v48h-32v-80h128zm0 0\" fill=\"#62808c\"/><path d=\"m304 512h-224c-26.507812 0-48-21.492188-48-48v-336h320v336c0 26.507812-21.492188 48-48 48zm0 0\" fill=\"#e76e54\"/><path d=\"m384 160h-384v-64c0-17.671875 14.328125-32 32-32h320c17.671875 0 32 14.328125 32 32zm0 0\" fill=\"#77959e\"/><path d=\"m260 260c-6.246094-6.246094-16.375-6.246094-22.625 0l-41.375 41.375-41.375-41.375c-6.25-6.246094-16.378906-6.246094-22.625 0s-6.246094 16.375 0 22.625l41.375 41.375-41.375 41.375c-6.246094 6.25-6.246094 16.378906 0 22.625s16.375 6.246094 22.625 0l41.375-41.375 41.375 41.375c6.25 6.246094 16.378906 6.246094 22.625 0s6.246094-16.375 0-22.625l-41.375-41.375 41.375-41.375c6.246094-6.25 6.246094-16.378906 0-22.625zm0 0\" fill=\"#fff\"/></svg>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\n\r\nclass Input extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: '',\r\n            btnAddInput: true,\r\n            btnCloseBtn: false\r\n        };\r\n    }\r\n    addInputBtn = () =>{\r\n        const currentState = this.state.btnCloseBtn;\r\n        this.setState({btnCloseBtn: !currentState});\r\n        const stateForAddInput = this.state.btnAddIpnut;\r\n        this.setState({btnAddInput: stateForAddInput});\r\n      }\r\n    addTask = () =>{\r\n        const {input} = this.state;\r\n        if (input) {\r\n            this.props.addTask(input);\r\n            this.setState({input: ''});\r\n        }\r\n    }\r\n    inputChange = (e) => {\r\n        this.setState({ input: e.target.value});\r\n    }\r\n    handleEnter = (e) => {\r\n        if(e.key ==='Enter') this.addTask();\r\n    }\r\n    render() {\r\n        const {input} = this.state; \r\n        return (\r\n            <div className=\"input__intro\">\r\n               <button className={`btn__addInput ${this.state.btnCloseBtn ? 'deleteBtnForInput' : null}`}\r\n                onClick={this.addInputBtn}>\r\n                    <span className=\"svg__plus\">\r\n                        <svg height=\"12px\" viewBox=\"0 0 448 448\" width=\"12px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m408 184h-136c-4.417969 0-8-3.582031-8-8v-136c0-22.089844-17.910156-40-40-40s-40 17.910156-40 40v136c0 4.417969-3.582031 8-8 8h-136c-22.089844 0-40 17.910156-40 40s17.910156 40 40 40h136c4.417969 0 8 3.582031 8 8v136c0 22.089844 17.910156 40 40 40s40-17.910156 40-40v-136c0-4.417969 3.582031-8 8-8h136c22.089844 0 40-17.910156 40-40s-17.910156-40-40-40zm0 0\"/></svg>\r\n                    </span>\r\n                    Добавить задачу\r\n                    </button>\r\n                <div className={this.state.btnAddInput ? 'stateForAddInput' : null}>\r\n                    <input type=\"text\" \r\n                    className=\"input\" \r\n                    placeholder=\"Введите задачу\"\r\n                    onChange={this.inputChange}\r\n                    value={input} \r\n                    onKeyPress={this.handleEnter}\r\n                    />\r\n                    <button onClick={this.addTask} className=\"btn\">\r\n                    <svg id=\"Capa_1\" enableBackground=\"new 0 0 551.13 551.13\" height=\"20\" viewBox=\"0 0 551.13 551.13\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m275.565 0c-151.944 0-275.565 123.621-275.565 275.565s123.621 275.565 275.565 275.565 275.565-123.621 275.565-275.565-123.621-275.565-275.565-275.565zm0 516.685c-132.955 0-241.119-108.164-241.119-241.119s108.164-241.12 241.119-241.12 241.12 108.164 241.12 241.119-108.165 241.12-241.12 241.12z\"/><path d=\"m292.788 137.783h-34.446v120.56h-120.56v34.446h120.56v120.56h34.446v-120.56h120.56v-34.446h-120.56z\"/></svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Input;","import React from 'react';\nimport './App.css';\nimport Task from './Components/Task';\nimport Input from './Components/Input'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: [],\n    }\n  }\n\n  componentDidMount= () => {\n    let LocalTask = JSON.parse(localStorage.getItem('LocalTask'));\n    if (LocalTask) {\n      this.setState({tasks : LocalTask});\n    }\n  }\n\n   doneTask = (id,tasks) => {\n    const index = this.state.tasks.map(task => task.id).indexOf(id);\n    this.setState(({tasks}) =>{\n      if(tasks[index].done) {\n      tasks[index].done = false;\n      } else {\n      tasks[index].done = true;\n      }\n      let a = JSON.stringify(tasks);\n      localStorage.setItem('LocalTask', a)\n      return tasks;\n    })\n  }\n\n  deleteTask = (id) => {\n    this.setState(({ tasks }) => {\n      const idx = tasks.findIndex((el) => el.id === id);\n\n      const newArray = [\n        ...tasks.slice(0, idx),\n        ...tasks.slice(idx + 1)\n      ];\n\n      let local = JSON.stringify(newArray);\n      localStorage.setItem('LocalTask', local);\n\n      return {\n        tasks: newArray\n      };\n    });\n\n  };\naddTask = (task, id) => {\n    this.setState(({tasks}) => {\n      tasks.push( {\n        id: tasks.length/*  ==! 0 ? tasks.length : 0 */, \n        title: task, \n        done: false\n      })\n      \n      let a = JSON.stringify(tasks);\n      localStorage.setItem('LocalTask', a)\n      return tasks\n    })\n  } \n   \n  render() {\n    const {tasks} = this.state; \n    const activeTasks = tasks.filter(task => !task.done);\n    let doneTasks = tasks.filter(task => task.done);\n    \n    return(\n      <div className=\"App\">\n        <div className=\"container\">\n\n          <h1 className=\"main__title\"> Входящие задачи</h1>\n          <h3>Выполненно задач: {doneTasks.length}</h3>\n          {!tasks.length && <h2 className=\"main__title-notasks\">Задачи отсутствуют</h2>}\n          {[...activeTasks,...doneTasks].map(task => (\n            <Task className=\"task\" \n            task={task} \n            key={task.id}\n            deleteTask={() => this.deleteTask(task.id)}\n            doneTask={() => this.doneTask(task.id)}\n            />\n          ))}\n          <Input\n          addInputBtn={this.addInputBtn}\n          addTask={this.addTask} \n          />\n          \n        </div>\n      </div>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}